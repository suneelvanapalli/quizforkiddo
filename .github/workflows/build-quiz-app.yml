name: Build and run tests

on:
  push:
    branches: ['master']

  pull_request:
    types:
      - opened
    branches:
      - master
      - main
      - feature/*

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Cache npm packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{hashFiles('**/package-lock.json')}}

      - name: Install packages
        run: |
          npm install

      - name: Linting
        run: |
          npm run lint

  build:
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{steps.publish.outputs.script-file}}
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Cache npm packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{hashFiles('**/package-lock.json')}}

      - name: Install packages
        run: |
          npm install

      - name: Build
        run: |
          npm run build

      - name: publish file name
        id: publish
        run: |
          find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'

      - name: Get files
        run: |
          cd dist
          dir

      - name: Upload artificats
        uses: actions/upload-artifact@v4
        with:
          name: 'dist-files'
          path: dist

      - name: Run Tests
        id: tests
        run: |
          npm run test

      - name: Upload test artifacts
        if: failure() && steps.tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: 'test-reports'
          path: dist/reports

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Cache npm packages
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{hashFiles('**/package-lock.json')}}
      - name: Install packages
        if: steps.cache.outputs.cache-hit == 'false'
        run: |
          npm install

      - name: Deploy
        run: |
          echo "Deployed code"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: 'dist-files'
      - name: Output downloaded files
        run: ls
      - name: output file name  from build job ouput
        run: echo '${{needs.build.outputs.script-file}}'

  report:
    if: failure()
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Report failure
        run: |
          echo 'Other jobs failed'
